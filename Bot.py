import requests
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from pytube import YouTube
import os
from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton, message
from config import TOKEN

loger_chat_id = "-792836774"
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

weather_flag = 0
video_flag = 0
audio_flag = 0
#Creating main keyboard
button_video = KeyboardButton('–í—ñ–¥–µ–æ üìπ')
button_music = KeyboardButton('–ú—É–∑–∏–∫–∞ üéµ')
button_weather = KeyboardButton('–ü–æ–≥–æ–¥–∞ ‚òÄÔ∏è')
main_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
main_kb.row(button_video, button_music)
main_kb.add(button_weather)
#Creating aboba keyboard to stop asking link
button_aboba = KeyboardButton('–∞–±–æ–±–∞')
aboba_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
aboba_kb.add(button_aboba)

@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    global loger_chat_id
    await message.reply("–ü—Ä–∏–≤—ñ—Ç) \n–Ø –ì–µ–æ—Ä–≥. –ù–∞–º–∞–≥–∞—é—Å—è –±—É—Ç–∏ –∫–æ—Ä–∏—Å–Ω–∏–º)))))))", reply_markup=main_kb)
    await bot.send_message(loger_chat_id, "–ú–µ–Ω–µ —Ö—Ç–æ—Å—å –∑–∞–ø—É—Å—Ç–∏–≤!")


@dp.message_handler(commands=['help'])
async def process_help_command(message: types.Message):
    await message.reply(text = "‚òÄÔ∏è–Ø –¥—ñ–∑–Ω–∞—é—Å—å –¥–ª—è —Ç–µ–±–µ –ø–æ–≥–æ–¥—É –≤ –±—É–¥—å-—è–∫–æ–º—É –º—ñ—Å—Ç—ñ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é /weather \nüìπ –Ø –º–æ–∂—É —Å–∫–∞—á–∞—Ç–∏ –¥–ª—è —Ç–µ–±–µ –∫–æ—Ä–æ—Ç–µ—Å–µ–Ω—å–∫–∏–π –º—î–º –∑ –Æ—Ç—É–±—á–∏–∫–∞. –°–ø—Ä–æ–±—É–π /video\nüéµ –Ø –≤—ñ–¥–ø—Ä–∞–≤–ª—é —Ç–æ–±—ñ –º—É–∑–∏–∫—É —Å –≤—ñ–¥–µ–æ –Ω–∞ –Æ—Ç—É–±! –¢—Ä—ñ—à–∫–∏ –ø—ñ—Ä–∞—Ç—Å—Ç–≤–æ, –∞–ª–µ —Å–ø—Ä–æ–±—É–π /music")

@dp.message_handler(lambda message: message.text == '–ü–æ–≥–æ–¥–∞ ‚òÄÔ∏è')
@dp.message_handler(commands=['weather'])
async def weather(message: types.Message):
    global loger_chat_id
    global weather_flag
    arguments = ""
    if(weather_flag):
        arguments = message.text
    else:
        arguments = message.get_args()
    try:
        req = "http://api.openweathermap.org/data/2.5/weather?q=" + arguments + "&appid=8915429fcf6a68275f7c20caab444827&units=metric&lang=UA"
        res = requests.get(req)
        data = res.json()
        answer = "–£ –º—ñ—Å—Ç—ñ " + arguments + " –∑–∞—Ä–∞–∑ " + str(data['main']['temp']) + " ¬∞–° —Ç–∞ " + data['weather'][0]['description']
        weather_flag = 0
        await bot.send_message(message.chat.id, text=answer)
        await bot.send_message(message.chat.id, text="–©–æ—Å—å —â–µ?)", reply_markup=main_kb)
        await bot.send_message(loger_chat_id, "–•—Ç–æ—Å—å –¥—ñ–∑–Ω–∞–≤—Å—è –ø–æ–≥–æ–¥—É –≤ " + arguments + "!")
    except:
        weather_flag
        weather_flag = 1
        await bot.send_message(message.chat.id, text="–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞ (–∞–±–æ –Ω–∞—Ç–∏—Å–Ω–∏ –∞–±–æ–±–∞)", reply_markup=aboba_kb)

@dp.message_handler(lambda message: message.text == '–í—ñ–¥–µ–æ üìπ')
@dp.message_handler(commands=['video'])
async def video(message: types.Message):
    global loger_chat_id
    global video_flag
    print(video_flag)
    arguments = ""
    if(video_flag):
        arguments = message.text
        print(arguments)
    else:
        arguments = message.get_args()
    try:
        yt = YouTube(arguments)
    except:
        video_flag = 1
        await bot.send_message(message.chat.id, text="–ö–∏–Ω—å —Å–∏–ª–∫—É –Ω–∞ –Æ—Ç—É–± (–∞–±–æ –Ω–∞—Ç–∏—Å–Ω–∏ –∞–±–æ–±–∞)", reply_markup=aboba_kb)
        return
    if(yt.length < 300):
        await bot.send_message(message.chat.id, text="–°–µ–∫—É–Ω–¥–æ—á–∫—É..")
        name_of_video = yt.title
        video = yt.streams.filter(res="360p",).first().download(filename=name_of_video+".mp4")
        video_to_send = open(name_of_video+".mp4", 'rb')
        await bot.send_video(message.chat.id, video=video_to_send, supports_streaming=True)
        await bot.send_message(message.chat.id, text="–©–æ—Å—å —â–µ?)", reply_markup=main_kb)
        os.remove(name_of_video+".mp4")
        await bot.send_message(loger_chat_id, text="–•—Ç–æ—Å—å —Å–∫–∞—á–∞–≤ –≤—ñ–¥–µ–æ\n" + arguments)
        video_flag = 0
    else:
        video_flag = 0
        await bot.send_message(message.chat.id, text="–£ –º–µ–Ω–µ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ 600 –º–±. –ú–± —Ç–æ–±—ñ —â–µ –Ü–Ω—Ç–µ—Ä—Å—Ç–µ–ª–ª–∞—Ä —Å–∫–∞—á–∞—Ç–∏?(((((")
@dp.message_handler(lambda message: message.text == '–ú—É–∑–∏–∫–∞ üéµ')
@dp.message_handler(commands=['music'])
async def audio(message: types.Message):
    global loger_chat_id
    global audio_flag
    print(audio_flag)
    arguments = ""
    if(audio_flag):
        arguments = message.text
        print(arguments)
    else:
        arguments = message.get_args()
    try:
        yt = YouTube(arguments)
    except:
        audio_flag = 1
        await bot.send_message(message.chat.id, text="–ö–∏–Ω—å —Å–∏–ª–∫—É –Ω–∞ –Æ—Ç—É–± (–∞–±–æ –Ω–∞—Ç–∏—Å–Ω–∏ –∞–±–æ–±–∞)", reply_markup=aboba_kb)
        return
    if(yt.length < 300):
        await bot.send_message(message.chat.id, text="–°–µ–∫—É–Ω–¥–æ—á–∫—É..")
        name_of_audio = yt.title
        music = yt.streams.filter(only_audio=True).first().download(filename=name_of_audio+".mp3")
        audio_to_send = open(name_of_audio+".mp3", 'rb')
        await bot.send_audio(message.chat.id, audio=audio_to_send)
        await bot.send_message(message.chat.id, text="–©–æ—Å—å —â–µ?)", reply_markup=main_kb)
        # await bot.send_video(message.from_user.id, video=video_to_send, supports_streaming=True)
        os.remove(name_of_audio+".mp3")
        await bot.send_message(loger_chat_id, text="–•—Ç–æ—Å—å —Å–∫–∞—á–∞–≤ –º—É–∑–∏–∫—É\n" + arguments)
        audio_flag = 0
    else:
        audio_flag = 0
        await bot.send_message(message.chat.id, text="–£ –º–µ–Ω–µ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ 600 –º–±. –ú–± —Ç–æ–±—ñ —â–µ –Ü–Ω—Ç–µ—Ä—Å—Ç–µ–ª–ª–∞—Ä —Å–∫–∞—á–∞—Ç–∏?(((((", reply_markup=main_kb)

@dp.message_handler()
async def echo_message(msg: types.Message):
    global weather_flag
    global video_flag
    global audio_flag
    print(msg.chat.id)
    if(weather_flag or video_flag or audio_flag):
        if(weather_flag and msg.text != "–∞–±–æ–±–∞" and msg.text != "/help" and msg.text != "/weather" and msg.text != "/video" and msg.text != "/start" and msg.text != "/music"):
            await weather(message=msg)
            return
        if(video_flag and msg.text != "–∞–±–æ–±–∞" and msg.text != "/help" and msg.text != "/weather" and msg.text != "/video" and msg.text != "/start" and msg.text != "/music"):
            print(")))")
            await video(message=msg)
            return
        if(audio_flag and msg.text != "–∞–±–æ–±–∞" and msg.text != "/help" and msg.text != "/weather" and msg.text != "/video" and msg.text != "/start" and msg.text != "/music"):
            await audio(message=msg)
            return
        else:
            await bot.send_message(msg.chat.id, text="–î–æ–±—Ä–µ)\n–í—ñ–¥—Å—Ç–∞–Ω—É –≤—ñ–¥ —Ç–µ–±–µ")
            await bot.send_message(msg.chat.id, text="–©–æ—Å—å —â–µ?)", reply_markup=main_kb)
            weather_flag = 0
            video_flag = 0
            audio_flag = 0
            return


if __name__ == '__main__':
    executor.start_polling(dp)